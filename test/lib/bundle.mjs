/*! Generated by Kadoo v1.1.0 */
// ESLint declarations
/* global define */
/* eslint no-shadow: ['error', { 'allow': ['root'] }] */
/* eslint strict: ["error", "function"] */
const $__ES6GLOB = {};
(function(root, factory) {
  'use strict';

  /* istanbul ignore next */
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define([''], factory);
  } else if (typeof exports === 'object') {
    // Node. Does not work with strict CommonJS, but
    // only CommonJS-like environments that support module.exports,
    // like Node.
    /* eslint-disable-next-line no-param-reassign */
    module.exports = factory(root);
  } else {
    // Browser globals.
    /* eslint-disable-next-line no-param-reassign */
    root.A = factory(root);
  }
}($__ES6GLOB, (root) => {
  'use strict';

  /* ***************************************************************************
   *
   * Tree is an object that links all the internal IIFE modules.
   *
   * ************************************************************************ */
  /* eslint-disable */
  let $__TREE = {"test":{"src":{"main":{},"util":{}}}};
  $__TREE.extend=function(o,m){var k=Object.keys(m);for(var i=0;i<k.length;i++){o[k[i]]=m[k[i]]}};
  /* - */
  /* eslint-enable */

  /* index: 1, path: 'test/src/main.js', import: [2] */
  (function() {
    const { util } = $__TREE.test.src;

    function A() {
      return util.get();
    }

    $__TREE.test.src.main = A;
  }());

  /* index: 2, path: 'test/src/util.js', import: [] */
  (function() {
    const Util = {
      get() {
        return 'AAA';
      },
    };

    $__TREE.extend($__TREE.test.src.util, Util);
  }());


  // Returns the library name:
  return $__TREE.test.src.main;
}));

// -- Export
export default $__ES6GLOB.A;
